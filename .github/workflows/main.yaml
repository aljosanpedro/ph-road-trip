name: "godot-ci export"

on:
    push:
      tags:
        - "v*"
  

# NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".

env:
    GODOT_VERSION: 4.4.1
    PROJECT_PATH: .

  
jobs:
    export-windows:
        name: Windows Export
        runs-on: ubuntu-20.04
        container:
          image: barichello/godot-ci:4.4.1
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
              lfs: true
          - name: Setup
            run: |
              mkdir -v -p ~/.local/share/godot/export_templates/
              mkdir -v -p ~/.config/
              mv /root/.config/godot ~/.config/godot
              mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          - name: Windows Build
            run: |
              mkdir -v -p build/windows
              EXPORT_DIR="$(readlink -f build)"
              cd $PROJECT_PATH
              godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/develup_quest_chapter_2.exe"
          - name: Upload Artifact
            id: upload_artifact
            uses: actions/upload-artifact@v4
            with:
              name: windows
              path: build/windows

          - name: Zipping for Release
            run: |
              cd build/windows/
              zip -r windows_${{  github.ref_name }}.zip *

          - name: Creating Release
            uses: ncipollo/release-action@v1.14.0
            with:
              token: ${{ secrets.GITHUB_TOKEN }}
              generateReleaseNotes: true
              tag: ${{ github.ref_name }}
              artifacts: build/windows/windows_${{  github.ref_name }}.zip

    export-web:
        name: Web Export
        runs-on: ubuntu-20.04
        container:
          image: barichello/godot-ci:4.4.1
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                lfs: true
            - name: Setup
              run: |
                mkdir -v -p ~/.local/share/godot/export_templates/
                mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
            - name: Web Build
              run: |
                mkdir -v -p build/web
                EXPORT_DIR="$(readlink -f build)"
                cd $PROJECT_PATH
                godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
                
            - name: Upload Artifact
              id: upload_artifact
              uses: actions/upload-artifact@v4
              with:
                name: web
                path: build/web
            
            - name: Zipping for Release
              run: |
                cd build/web/
                zip -r web_${{  github.ref_name }}.zip *

            - name: Creating Release
              uses: ncipollo/release-action@v1.14.0
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                generateReleaseNotes: true
                tag: ${{ github.ref_name }}
                artifacts: build/web/web_${{  github.ref_name }}.zip
  

            # - name: Install rsync ðŸ“š
            #   run: |
            #     apt-get update && apt-get install -y rsync

            # # - name: Deploy to GitHub Pages ðŸš€
            # #     uses: JamesIves/github-pages-deploy-action@releases/v4
            # #     with:
            # #     branch: gh-pages # The branch the action should deploy to.
            # #     folder: build/web # The folder the action should deploy.

            # - name: Add coi-service-worker
            #   run: |
            #     git clone https://github.com/gzuidhof/coi-serviceworker.git
            #     mv coi-serviceworker/coi-serviceworker.js build/web/coi-serviceworker.js
            #     sed -i '3 i <script src="coi-serviceworker.js"></script>' build/web/index.html

            # - name: Deploy
            #   uses: peaceiris/actions-gh-pages@v4
            #   with:
            #     github_token: ${{ secrets.GITHUB_TOKEN }}
            #     publish_dir: ./build/web
            #     force_orphan: true
            #     user_name: "github-ci[bot]"
            #     user_email: "github-actions[bot]@users.noreply.github.com"
            #     commit_message: "Publish to gh-pages"

    # export-mac:
    #     name: Mac Export
    #     runs-on: ubuntu-20.04
    #     container:
    #     image: barichello/godot-ci:4.4.1
    #     steps:
    #     - name: Checkout
    #         uses: actions/checkout@v4
    #         with:
    #         lfs: true
    #     - name: Setup
    #         run: |
    #         mkdir -v -p ~/.local/share/godot/export_templates/
    #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
    #     - name: Mac Build
    #         run: |
    #         mkdir -v -p build/mac
    #         EXPORT_DIR="$(readlink -f build)"
    #         cd $PROJECT_PATH
    #         godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
    #     - name: Upload Artifact
    #         uses: actions/upload-artifact@v4
    #         with:
    #         name: mac
    #         path: build/mac
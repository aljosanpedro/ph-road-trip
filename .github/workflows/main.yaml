name: "godot-ci export"

on:
    push:
      tags:
        - "v*"
  

# NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".

env:
    GODOT_VERSION: 4.4.1
    EXPORT_NAME: miles-of-memories
    PROJECT_PATH: .

  
jobs:
    export-windows:
        permissions: write-all
        name: Windows Export and Push to Itch.io
        runs-on: ubuntu-latest
        container:
          image: barichello/godot-ci:4.4.1
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
              lfs: true
          - name: Setup
            run: |
              mkdir -v -p ~/.local/share/godot/export_templates/
              mkdir -v -p ~/.config/
              mv /root/.config/godot ~/.config/godot
              mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
            
          - name: Import Assets
            run: |
              cd $PROJECT_PATH
              godot --headless --verbose --editor --quit

          - name: Windows Build
            run: |
              mkdir -v -p build/windows
              EXPORT_DIR="$(readlink -f build)"
              cd $PROJECT_PATH
              godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"

          - name: Upload Artifact
            id: upload_artifact
            uses: actions/upload-artifact@v4
            with:
              name: windows
              path: build/windows

          - name: Zipping for Windows Release
            run: |
              cd build/windows/
              zip -r windows_${{ github.ref_name }}.zip *

          - name: Place API Key to butler_creds
            run: |
              mkdir -p ~/.config/itch/
              touch ~/.config/itch/butler_creds
              echo -n ${{ secrets.Itch_API_Key }} | cat > ~/.config/itch/butler_creds

          - name: Logging in to Itch
            run: |
              butler login

          - name: Push Windows Version to Itch
            run: |
              butler push build/windows/windows_${{  github.ref_name }}.zip aljowo/miles-of-memories:windows-stable

    export-linux:
      permissions: write-all
      name: Linux Export and Push to Itch.io
      runs-on: ubuntu-latest  # Use 22.04 with godot 4
      container:
        image: barichello/godot-ci:4.4.1
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            lfs: true
            
        - name: Setup
          run: |
            mkdir -v -p ~/.local/share/godot/export_templates/
            mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

        - name: Import Assets
          run: |
            cd $PROJECT_PATH
            godot --headless --verbose --editor --quit

        - name: Linux Build
          run: |
            mkdir -v -p build/linux
            EXPORT_DIR="$(readlink -f build)"
            cd $PROJECT_PATH
            godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
        
        - name: Upload Artifact
          id: upload_artifact
          uses: actions/upload-artifact@v4
          with:
            name: linux
            path: build/linux

        - name: Zipping for Linux Release
          run: |
            cd build/linux/
            zip -r linux_${{ github.ref_name }}.zip *

        - name: Place API Key to butler_creds
          run: |
            mkdir -p ~/.config/itch/
            touch ~/.config/itch/butler_creds
            echo -n ${{ secrets.Itch_API_Key }} | cat > ~/.config/itch/butler_creds

        - name: Logging in to Itch
          run: |
            butler login

        - name: Push Linux Version to Itch
          run: |
            butler push build/linux/linux_${{  github.ref_name }}.zip aljowo/miles-of-memories:linux-stable

    export-mac:
      name: Mac Export
      runs-on: ubuntu-latest  # Use 22.04 with godot 4
      container:
        image: barichello/godot-ci:4.4.1
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            lfs: true
          
        - name: Setup
          run: |
            mkdir -v -p ~/.local/share/godot/export_templates/
            mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

        - name: Import Assets
          run: |
            cd $PROJECT_PATH
            godot --headless --verbose --editor --quit

        - name: Mac Build
          run: |
            mkdir -v -p build/mac
            EXPORT_DIR="$(readlink -f build)"
            cd $PROJECT_PATH
            godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
        
        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with:
            name: mac
            path: build/mac

        - name: Place API Key to butler_creds
          run: |
            mkdir -p ~/.config/itch/
            touch ~/.config/itch/butler_creds
            echo -n ${{ secrets.Itch_API_Key }} | cat > ~/.config/itch/butler_creds

        - name: Logging in to Itch
          run: |
            butler login

        - name: Push Mac Version to Itch
          run: |
            butler push build/mac/$EXPORT_NAME.zip aljowo/miles-of-memories:mac-stable

    export-web:
        permissions: write-all
        name: Web Export and Push to Itch.io
        runs-on: ubuntu-latest
        container:
          image: barichello/godot-ci:4.4.1
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                lfs: true
            - name: Setup
              run: |
                mkdir -v -p ~/.local/share/godot/export_templates/
                mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

            - name: Import Assets
              run: |
                cd $PROJECT_PATH
                godot --headless --verbose --editor --quit
                
            - name: Web Build
              run: |
                mkdir -v -p build/web
                EXPORT_DIR="$(readlink -f build)"
                cd $PROJECT_PATH
                godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"

            - name: Upload Artifact
              id: upload_artifact
              uses: actions/upload-artifact@v4
              with:
                name: web
                path: build/web
            
            - name: Zipping for Web Release
              run: |
                cd build/web/
                zip -r web_${{ github.ref_name }}.zip *

            - name: Place API Key to butler_creds
              run: |
                mkdir -p ~/.config/itch/
                touch ~/.config/itch/butler_creds
                echo -n ${{ secrets.Itch_API_Key }} | cat > ~/.config/itch/butler_creds

            - name: Logging in to Itch
              run: |
                butler login
            
            - name: Push Web Version to Itch
              run: |
                butler push build/web/web_${{  github.ref_name }}.zip aljowo/miles-of-memories:html-stable

            # - name: Install rsync ðŸ“š
            #   run: |
            #     apt-get update && apt-get install -y rsync

            # # - name: Deploy to GitHub Pages ðŸš€
            # #     uses: JamesIves/github-pages-deploy-action@releases/v4
            # #     with:
            # #     branch: gh-pages # The branch the action should deploy to.
            # #     folder: build/web # The folder the action should deploy.

            # - name: Add coi-service-worker
            #   run: |
            #     git clone https://github.com/gzuidhof/coi-serviceworker.git
            #     mv coi-serviceworker/coi-serviceworker.js build/web/coi-serviceworker.js
            #     sed -i '3 i <script src="coi-serviceworker.js"></script>' build/web/index.html

            # - name: Deploy
            #   uses: peaceiris/actions-gh-pages@v4
            #   with:
            #     github_token: ${{ secrets.GITHUB_TOKEN }}
            #     publish_dir: ./build/web
            #     force_orphan: true
            #     user_name: "github-ci[bot]"
            #     user_email: "github-actions[bot]@users.noreply.github.com"
            #     commit_message: "Publish to gh-pages"

    create-release:
        permissions: write-all
        needs: [export-windows, export-web, export-linux, export-mac]
        name: Creating Releases for Windows/Web
        runs-on: ubuntu-latest
        steps:
            - name: Download Windows Artifact
              uses: actions/download-artifact@v4
              with:
                name: windows
                path: build/windows/
            
            - name: Download Web Artifact
              uses: actions/download-artifact@v4
              with:
                name: web
                path: build/web/
            
            - name: Download Linux Artifact
              uses: actions/download-artifact@v4
              with:
                name: windows
                path: build/linux/
            
            - name: Download Mac Artifact
              uses: actions/download-artifact@v4
              with:
                name: web
                path: build/mac/

            - name: Zipping for Windows Release
              run: |
                cd build/windows/
                zip -r windows_${{  github.ref_name }}.zip *

            - name: Zipping for Web Release
              run: |
                cd build/web/
                zip -r web_${{  github.ref_name }}.zip *

            - name: Zipping for Linux Release
              run: |
                cd build/linux/
                zip -r linux_${{  github.ref_name }}.zip *
              
            - name: Creating Release
              uses: ncipollo/release-action@v1.14.0
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                generateReleaseNotes: true
                tag: ${{ github.ref_name }}
                artifacts: "build/web/web_${{  github.ref_name }}.zip,build/windows/windows_${{  github.ref_name }}.zip,build/linux/linux_${{  github.ref_name }}.zip,build/mac/$EXPORT_NAME.zip"

    publish-on-github-pages:
      permissions: write-all
      needs: export-web
      name: Publishing on Github Pages
      runs-on: ubuntu-latest
      steps:
        - name: Download Web Artifact
          uses: actions/download-artifact@v4
          with:
            name: web
            path: build/web/

        - name: Install rsync ðŸ“š
          run: |
            sudo apt-get update && sudo apt-get install -y rsync

        - name: Add coi-service-worker
          run: |
            git clone https://github.com/gzuidhof/coi-serviceworker.git
            mv coi-serviceworker/coi-serviceworker.js build/web/coi-serviceworker.js
            sed -i '3 i <script src="coi-serviceworker.js"></script>' build/web/index.html

        - name: Deploy
          uses: peaceiris/actions-gh-pages@v4
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: ./build/web
            force_orphan: true
            user_name: "github-ci[bot]"
            user_email: "github-actions[bot]@users.noreply.github.com"
            commit_message: "Publish to gh-pages"

